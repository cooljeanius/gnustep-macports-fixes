Index: block_trampolines.S
===================================================================
--- block_trampolines.S	(revision 34927)
+++ block_trampolines.S	(working copy)
@@ -12,6 +12,7 @@
 # with the correct first argument, the self pointer moved to the second real
 # argument (the first block argument) and the _cmd parameter excised
 
+#ifndef __APPLE__
 .file	"block_trampolines.S"
 #if __arm__
 .syntax unified
@@ -79,3 +80,4 @@
 __objc_block_trampoline_sret:
 __objc_block_trampoline_end_sret:
 #endif
+#endif
Index: Makefile
===================================================================
--- Makefile	(revision 34927)
+++ Makefile	(working copy)
@@ -7,12 +7,14 @@
 SUBMINOR_VERSION = 0
 VERSION = $(MAJOR_VERSION).$(MINOR_VERSION).$(SUBMINOR_VERSION)
 
-LIBOBJCLIBNAME=objc
-LIBOBJC=libobjc
-LIBOBJCXX=libobjcxx
+LIBOBJCLIBNAME=objc-gnu
+LIBOBJC=libobjc-gnu
+LIBOBJCXX=libobjcxx-gnu
 
-SILENT=@
+SHARED_LIB_SUFFIX=dylib
 
+#SILENT=@
+
 CFLAGS += -std=gnu99 -fPIC -fexceptions
 CXXFLAGS += -fPIC -fexceptions
 CPPFLAGS += -DTYPE_DEPENDENT_DISPATCH -DGNUSTEP
@@ -64,19 +66,19 @@
 	statics_loader.o\
 	toydispatch.o
 
-all: $(LIBOBJC).a $(LIBOBJCXX).so.$(VERSION)
+all: $(LIBOBJC).a $(LIBOBJCXX).$(SHARED_LIB_SUFFIX)
 
-$(LIBOBJCXX).so.$(VERSION): $(LIBOBJC).so.$(VERSION) $(OBJCXX_OBJECTS)
+$(LIBOBJCXX).$(SHARED_LIB_SUFFIX): $(LIBOBJC).$(SHARED_LIB_SUFFIX) $(OBJCXX_OBJECTS)
 	$(SILENT)echo Linking shared Objective-C++ runtime library...
-	$(SILENT)$(CXX) -shared -o $@ $(OBJCXX_OBJECTS)
+	$(SILENT)libtool -dynamic -o $@ -install_name $(LIBRARY_PATH)/$@ -current_version $(VERSION) -undefined dynamic_lookup $(OBJCXX_OBJECTS)
 
-$(LIBOBJC).so.$(VERSION): $(OBJECTS)
+$(LIBOBJC).$(SHARED_LIB_SUFFIX): $(OBJECTS)
 	$(SILENT)echo Linking shared Objective-C runtime library...
-	$(SILENT)$(CC) -shared -rdynamic -o $@ $(OBJECTS)
+	$(SILENT)libtool -dynamic -o $@ -install_name $(LIBRARY_PATH)/$@ -current_version $(VERSION) -undefined dynamic_lookup $(OBJECTS)
 
 $(LIBOBJC).a: $(OBJECTS)
 	$(SILENT)echo Linking static Objective-C runtime library...
-	$(SILENT)ld -r -s -o $@ $(OBJECTS)
+	$(SILENT)libtool -static -o $@ $(OBJECTS)
 
 .cc.o: Makefile
 	$(SILENT)echo Compiling `basename $<`...
@@ -88,7 +90,7 @@
 
 .m.o: Makefile
 	$(SILENT)echo Compiling `basename $<`...
-	$(SILENT)$(CC) $(CPPFLAGS) $(CFLAGS) -fobjc-exceptions -c $< -o $@
+	$(SILENT)$(CC) $(CPPFLAGS) $(CFLAGS) -fobjc-exceptions -fgnu-runtime -c $< -o $@
 
 .S.o: Makefile
 	$(SILENT)echo Assembling `basename $<`...
@@ -97,22 +99,15 @@
 install: all
 	$(SILENT)echo Installing libraries...
 	$(SILENT)install -d $(LIB_DIR)
-	$(SILENT)install -m 444 $(LIBOBJC).so.$(VERSION) $(LIB_DIR)
-	$(SILENT)install -m 444 $(LIBOBJCXX).so.$(VERSION) $(LIB_DIR)
+	$(SILENT)install -m 444 $(LIBOBJC).$(SHARED_LIB_SUFFIX) $(LIB_DIR)
+	$(SILENT)install -m 444 $(LIBOBJCXX).$(SHARED_LIB_SUFFIX) $(LIB_DIR)
 	$(SILENT)install -m 444 $(LIBOBJC).a $(LIB_DIR)
 	$(SILENT)if [ "$(strip)" = "yes" ]; then \
 		echo Stripping installed libraries...; \
-		strip $(LIB_DIR)/$(LIBOBJC).so.$(VERSION); \
-		strip $(LIB_DIR)/$(LIBOBJCXX).so.$(VERSION); \
+		strip $(LIB_DIR)/$(LIBOBJC).$(SHARED_LIB_SUFFIX); \
+		strip $(LIB_DIR)/$(LIBOBJCXX).$(SHARED_LIB_SUFFIX); \
 		strip $(LIB_DIR)/$(LIBOBJC).a; \
 	fi
-	$(SILENT)echo Creating symbolic links...
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJC).so.$(VERSION) $(LIB_DIR)/$(LIBOBJC).so
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJC).so.$(VERSION) $(LIB_DIR)/$(LIBOBJC).so.$(MAJOR_VERSION)
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJC).so.$(VERSION) $(LIB_DIR)/$(LIBOBJC).so.$(MAJOR_VERSION).$(MINOR_VERSION)
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJCXX).so.$(VERSION) $(LIB_DIR)/$(LIBOBJCXX).so
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJCXX).so.$(VERSION) $(LIB_DIR)/$(LIBOBJCXX).so.$(MAJOR_VERSION)
-	$(SILENT)ln -sf $(LIB_DIR)/$(LIBOBJCXX).so.$(VERSION) $(LIB_DIR)/$(LIBOBJCXX).so.$(MAJOR_VERSION).$(MINOR_VERSION)
 	$(SILENT)echo Installing headers...
 	$(SILENT)install -d $(HEADER_DIR)/objc
 	$(SILENT)install -m 444 objc/*.h $(HEADER_DIR)/objc
@@ -121,6 +116,6 @@
 	$(SILENT)echo Cleaning...
 	$(SILENT)rm -f $(OBJECTS)
 	$(SILENT)rm -f $(OBJCXX_OBJECTS)
-	$(SILENT)rm -f $(LIBOBJC).so.$(VERSION)
-	$(SILENT)rm -f $(LIBOBJCXX).so.$(VERSION)
+	$(SILENT)rm -f $(LIBOBJC).$(SHARED_LIB_SUFFIX)
+	$(SILENT)rm -f $(LIBOBJCXX).$(SHARED_LIB_SUFFIX)
 	$(SILENT)rm -f $(LIBOBJC).a
Index: block_to_imp.c
===================================================================
--- block_to_imp.c	(revision 34927)
+++ block_to_imp.c	(working copy)
@@ -66,6 +66,9 @@
 
 IMP imp_implementationWithBlock(void *block)
 {
+#ifdef __APPLE__
+	return 0;
+#else
 	struct block_literal *b = block;
 	void *start;
 	void *end;
@@ -93,6 +96,7 @@
 	memcpy(&out[2], start, trampolineSize);
 	out = buf.x;
 	return (IMP)&out[2];
+#endif
 }
 
 static void* isBlockIMP(void *anIMP)
Index: objc_msgSend.S
===================================================================
--- objc_msgSend.S	(revision 34927)
+++ objc_msgSend.S	(working copy)
@@ -1,3 +1,4 @@
+#ifndef __APPLE__
 #if __x86_64
 #include "objc_msgSend.x86-64.S"
 #elif __i386
@@ -7,3 +8,6 @@
 #else
 #warning objc_msgSend() not implemented for your architecture
 #endif
+#else
+#watning objc_msgSend() not implement on Mac OS X
+#endif
